{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_services/walmart-api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/categories-list/categories-list.component.css","webpack:///./src/app/categories-list/categories-list.component.html","webpack:///./src/app/categories-list/categories-list.component.ts","webpack:///./src/app/categories/categories.component.css","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {PaginatedItems} from '../_models/WalmartAPI/PaginatedItems';\nimport {Category} from '../_models/WalmartAPI/Category';\n\n@Injectable()\nexport class WalmartApiService {\n  constructor(private http: HttpClient) {}\n\n  apiUrl = 'http://localhost:4040/api';\n\n  GetCategories() {\n    return this.http.get<Category[]>(this.apiUrl + `/categories`);\n  }\n\n  GetCategoryProducts(categoryId: string) {\n    return this.http.get<PaginatedItems>(this.apiUrl + `/categories/${categoryId}`);\n  }\n\n  GetProductDetails(productId: string) {\n    return this.http.get(this.apiUrl + `/products/${productId}`)\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>Walmart Product Viewer!</h1>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { Routing } from './app.routing';\n\nimport { WalmartApiService } from './_services/walmart-api.service';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { ProductsComponent } from './products/products.component';\nimport { CategoriesListComponent } from './categories-list/categories-list.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CategoriesComponent,\n    ProductsComponent,\n    CategoriesListComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    Routing\n  ],\n  providers: [\n    WalmartApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","ï»¿import { Routes, RouterModule } from '@angular/router';\n\nimport {HomeComponent} from './home/home.component';\nimport {CategoriesComponent} from './categories/categories.component';\nimport {ProductsComponent} from './products/products.component';\nimport {PageNotFoundComponent} from './page-not-found/page-not-found.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'categories/:categoryId', component: CategoriesComponent },\n  { path: 'products/:productId', component: ProductsComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\nexport const Routing = RouterModule.forRoot(appRoutes);\n","module.exports = \"\"","module.exports = \"<ul>\\n  <li *ngFor=\\\"let category of productCategories\\\">\\n    <a href=\\\"/categories/{{category.id}}\\\">\\n      {{ category.name }}\\n    </a>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { WalmartApiService } from '../_services/walmart-api.service';\nimport { Category } from '../_models/WalmartAPI/Category';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n\n  constructor(private walmartService: WalmartApiService) { }\n\n  productCategories: Category[] = [];\n\n  ngOnInit() {\n    this.loadCategories();\n  }\n\n  private loadCategories () {\n    this.walmartService.GetCategories().subscribe(categories => {\n      this.productCategories = categories;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  <a href=\\\"/\\\">Back to Categories</a>\\n</p>\\n\\n<h2 *ngIf=\\\"category\\\">Category: {{category.name}}</h2>\\n\\n<table>\\n  <tbody>\\n  <tr *ngFor=\\\"let product of products\\\">\\n    <td><img src=\\\"{{product.thumbnailImage}}\\\" alt=\\\"\\\"></td>\\n    <td><a href=\\\"/products/{{product.itemId}}\\\">{{ product.name }}</a></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\n<!-- ERRORS -->\\n<div *ngIf=\\\"error && error.status === 404\\\">\\n  <h3>Not Found</h3>\\n  <p>\\n    The category you are looking for does not exist.\\n  </p>\\n</div>\\n\\n<div *ngIf=\\\"error && error.status === 400\\\">\\n  <h3>Not Found</h3>\\n  <p>\\n    The category id is invalid, or does not exist.\\n  </p>\\n</div>\\n\\n<div *ngIf=\\\"error && error.status !== 404 && error.status !== 400\\\">\\n  <h3>Oops</h3>\\n  <p>\\n    Sorry, there was an error. Please try again later.\\n  </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {WalmartApiService} from '../_services/walmart-api.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {PaginatedItem} from '../_models/WalmartAPI/PaginatedItem';\nimport {Category} from '../_models/WalmartAPI/Category';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private walmartService: WalmartApiService) {\n  }\n\n  categoryId: string;\n  category: Category;\n  products: PaginatedItem[];\n  error;\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.categoryId = params.categoryId;\n      this.loadProducts();\n    });\n  }\n\n  private loadProducts () {\n    this.walmartService.GetCategoryProducts(this.categoryId).subscribe(response => {\n      console.log('PRODUCTS', response);\n      this.category = response.category;\n      this.products = response.items;\n    },\n    err => {\n      console.error(err);\n      this.error = err;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3>Categories:</h3>\\n<app-categories-list></app-categories-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>The page you are looking for does not exist.</p>\\n<p>Please return <a href=\\\"/\\\">Home</a></p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div *ngIf=\\\"product\\\">\\n  <h2>{{product.name}}</h2>\\n  <img src=\\\"{{product.largeImage}}\\\" alt=\\\"\\\">\\n\\n  <p>{{product.shortDescription}}</p>\\n</div>\\n\\n<!-- ERRORS -->\\n<div *ngIf=\\\"error && error.status === 404\\\">\\n  <h3>Not Found</h3>\\n  <p>\\n    The product you are looking for does not exist.\\n  </p>\\n</div>\\n\\n<div *ngIf=\\\"error && error.status === 400\\\">\\n  <h3>Not Found</h3>\\n  <p>\\n    The item id is invalid, or does not exist.\\n  </p>\\n</div>\\n\\n<div *ngIf=\\\"error && error.status !== 404 && error.status !== 400\\\">\\n  <h3>Oops</h3>\\n  <p>\\n    Sorry, there was an error. Please try again later.\\n  </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {WalmartApiService} from '../_services/walmart-api.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private walmartService: WalmartApiService) { }\n\n  productId: string;\n  product;\n  error;\n\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(params => {\n      this.productId = params.productId;\n      this.loadProductDetails();\n    })\n  }\n\n  loadProductDetails () {\n    this.walmartService.GetProductDetails(this.productId).subscribe(product => {\n      console.log('PRODUCT', product);\n      this.product = product;\n    },\n        err => {\n      console.error(err);\n      this.error = err;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}